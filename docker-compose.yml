version: "3"
services:
  postgres:
    image: postgres:11-alpine
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'manifold_production'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    networks:
      - network1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.7
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      xpack.security.enabled: 'false'
    networks:
      - network1
  redis:
    image: redis:alpine
    volumes:
      - ./data/redis:/data
    networks:
      - network1
  api_cable:
    image: manifoldscholar/manifold_api_cable:v5.0.0-alpha.1
    volumes:
      - ./data/api/public:/opt/manifold/api/public
      - ./data/sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
    networks:
      - network1
    command: ["./start-and-run", "bin/cable"]

  api_clockwork:
    image: manifoldscholar/manifold_api_clockwork:v5.0.0-alpha.1
    volumes:
      - ./data/api/public:/opt/manifold/api/public
      - ./data/sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
      - ./environment/rails.env
    networks:
      - network1
    command: ["./start-and-run", "bin/zhong zhong.rb"]
  api_rails:
    image: manifoldscholar/manifold_api_rails:v5.0.0-alpha.1
    volumes:
      - ./data/api/public:/opt/manifold/api/public
      - ./data/sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
    command: ["./start-and-run", "bin/puma -C config/puma.rb"]
    networks:
      - network1
  api_sidekiq:
    image: manifoldscholar/manifold_api_sidekiq:v5.0.0-alpha.1
    volumes:
      - ./data/api/public:/opt/manifold/api/public
      - ./data/sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
    networks:
      - network1
    command: ["./start-and-run", "bin/sidekiq"]
  client:
    image: manifoldscholar/manifold_client:v5.0.0-alpha.1
    env_file:
      - ./environment/manifold.env
    volumes:
      - ./data/api:/manifold_data
      - ./data/sockets:/manifold_sockets
    command: yarn run start-docker
    networks:
      - network1
  proxy:
    image: manifoldscholar/manifold_proxy:v5.0.0-alpha.1
    volumes:
      - ./data/nginx/ssl:/etc/nginx/ssl
      - ./data/api/public:/manifold_data/api/public
      - ./data/sockets:/manifold_sockets
    ports:
      - "4000:4000"
      - "4001:4001"
      - "80:80"
      - "443:443"
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - network1
volumes:
  manifold_data:
  manifold_sockets:

networks:
  network1:
